{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/list/list.component.css","webpack:///./src/app/list/list.component.html","webpack:///./src/app/list/list.component.ts","webpack:///./src/app/new/new.component.css","webpack:///./src/app/new/new.component.html","webpack:///./src/app/new/new.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { ListComponent } from './list/list.component';\nimport { EditComponent } from './edit/edit.component';\nimport { NewComponent } from './new/new.component';\n\nconst routes: Routes = [\n  { path: \"home\", component: HomeComponent },\n  { path: \"list\", component: ListComponent },\n  { path: \"edit/:id\", component: EditComponent },\n  { path: \"new\", component: NewComponent },\n  { path: \"\", pathMatch: \"full\", redirectTo: \"/home\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Shin Product Management\\n  </h1>\\n  <a [routerLink]=\\\"['/home']\\\">Home</a> | \\n  <a [routerLink]=\\\"['/list']\\\">Product List</a> | \\n  <a [routerLink]=\\\"['/new']\\\">Add Product</a>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { HttpService } from \"./http.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'public';\n\n  constructor(private _httpService: HttpService) {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpService } from \"./http.service\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListComponent } from './list/list.component';\nimport { EditComponent } from './edit/edit.component';\nimport { NewComponent } from './new/new.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ListComponent,\n    EditComponent,\n    NewComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div>\\n  <h2>Edit Product</h2>\\n  <p *ngFor=\\\"let error of errors\\\" style= \\\"color: red\\\">{{error.message}}</p>\\n  <form *ngIf=\\\"product\\\" (submit)=\\\"editProduct(product._id)\\\">\\n    <p>Product name: <input type=\\\"text\\\" name=\\\"product.name\\\" [(ngModel)]=\\\"product.name\\\"></p>\\n    <p>Price: $<input type=\\\"number\\\" name=\\\"product.price\\\" [(ngModel)]=\\\"product.price\\\"></p>\\n    <p>Image Url: <input type=\\\"text\\\" name=\\\"product.image_url\\\" [(ngModel)]=\\\"product.image_url\\\"></p>\\n    <input type=\\\"submit\\\" value=\\\"Submit\\\">\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from \"../http.service\";\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  product: any = null;\n  errors: any = [];\n\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this._route.params.subscribe((params: Params) => {\n      this.getProductById(params[\"id\"]);\n    });\n  }\n\n  getProductById(id) {\n    let observable = this._httpService.getProductIdFromServer(id);\n    observable.subscribe(data => {\n      this.product = data;\n    })\n  }\n\n  editProduct(id) {\n    let observable = this._httpService.editProductInServer(id, this.product);\n    observable.subscribe(data => {\n      if(!data.hasErrors) {\n        this._router.navigate(['/list']);\n      }\n\n      this.errors = data.errors;\n    })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <h2>WELCOME</h2>\\n  <p>This is the place to see, sell, and modify awesome products.</p>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http: HttpClient) { }\n\n  getProductsFromServer() {\n    return this._http.get(\"http://localhost:8000/getProducts\");\n  }\n\n  getProductIdFromServer(id) {\n    return this._http.get(\"http://localhost:8000/getOneProduct/\" + id);\n  }\n\n  addProductInServer(product) {\n    return this._http.post(\"http://localhost:8000/newProduct\", product);\n  }\n\n  editProductInServer(id, product) {\n    return this._http.put(\"http://localhost:8000/editProduct/\" + id, product);\n  }\n\n  deleteProductInServer(id) {\n    return this._http.delete(\"http://localhost:8000/deleteProduct/\" + id);\n  }\n}\n","module.exports = \".product {\\n    width: 400px;\\n    display: block;\\n}\\n\\nimg {\\n    width: 100%;\\n    display: block;\\n}\"","module.exports = \"<div>\\n  <h2>Products List</h2>\\n  <div *ngFor=\\\"let product of products\\\" class=\\\"product\\\">\\n    <img src=\\\"{{ product.image_url }}\\\" alt=\\\"{{ product.name }}\\\">\\n    <p>{{ product.name }}</p>\\n    <p>${{ product.price }}</p>\\n    <button [routerLink]=\\\"['/edit', product._id]\\\">Edit</button> | \\n    <button (click)=\\\"deleteProduct(product._id)\\\">Delete</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from \"../http.service\";\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  products: any = [];\n\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.getProducts();\n  }\n\n  getProducts() {\n    let observable = this._httpService.getProductsFromServer();\n    observable.subscribe(data => {\n      this.products = data;\n    })\n  }\n\n  deleteProduct(id) {\n    let observable = this._httpService.deleteProductInServer(id);\n    observable.subscribe(data => {});\n    this.getProducts();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <h2>Add Product</h2>\\n  <p *ngFor=\\\"let error of errors\\\" style= \\\"color: red\\\">{{error.message}}</p>\\n  <form (submit)=\\\"addProduct()\\\">\\n    <p>Product name: <input type=\\\"text\\\" name=\\\"product.name\\\" [(ngModel)]=\\\"product.name\\\" value=\\\"{{product.name}}\\\"></p>\\n    <p>Price: $<input type=\\\"number\\\" name=\\\"product.price\\\" [(ngModel)]=\\\"product.price\\\" value=\\\"{{product.price}}\\\"></p>\\n    <p>Image Url: <input type=\\\"text\\\" name=\\\"product.image_url\\\" [(ngModel)]=\\\"product.image_url\\\" value=\\\"{{product.image_url}}\\\"></p>\\n    <input type=\\\"submit\\\" value=\\\"Update\\\">\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from \"../http.service\";\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css']\n})\nexport class NewComponent implements OnInit {\n  product: any = null;\n  errors: any = [];\n\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.product = { name: \"\", price: 0, image_url: \"\" };\n  }\n\n  addProduct() {\n    let observable = this._httpService.addProductInServer(this.product);\n    observable.subscribe(data => {\n      if(!data.hasErrors) {\n        this._router.navigate(['/list']);\n      }\n\n      this.errors = data.errors;\n    })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}